#include <iostream>;
#include <map>;
#include <fstream>
#include <string>
#include <vector>
#include <math.h>
using namespace std;

void textFile1() {
	setlocale(0, "");
	char let, A, B;
	string text;
	string LET, Llet;
	string BigLet = "AEIOUY";
	string SmallLet = "aeiouy";
	bool Big = false, Small = false;
	int min = 10000;


	ofstream fout("Lorem Ipsum.txt"); //создан файл;
	fout << "OOo Yyyyyy";
    //fout << "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum";
	fout.close();

	ifstream fin("Lorem Ipsum.txt"); //считывание файла

	char ch;

	while (true)
	{
		fin.get(ch); //посимвольный перебор
		if (fin.eof()) break; // пока содержимое файла не закончится
		text.append(1, ch); // к строке поочередно добавляются считываемые символы файла
	}

	map <char, int> mp1 = { {'A', 0}, {'E', 0}, {'I', 0}, {'O', 0}, {'U', 0}, {'Y', 0} };
	map <char, int> mp2 = { {'a', 0}, {'e', 0}, {'i', 0}, {'o', 0}, {'u', 0}, {'y', 0} };

	for (int i = 0; i <= text.size(); i++) { //задаются символы подаваемой строки и флаги
		let = text[i];
		Big = false;
		Small = false;
		for (int j = 0; j <= BigLet.size() - 1; j++) {  //перебор по строке крупной и малой
			if (let == BigLet[j]) { //если символ относится к гласным верхнего регистра
				Big = true; //флаг 
			}
			if (let == SmallLet[j]) { //если символ относится к гласным нижнего регистра
				Small = true; //флаг
			}
		}
		if (Big == true) {
			mp1[let] += 1; //счетчик словаря верхнего регистра
		}
		else if (Small = true) {
			mp2[let] += 1; //счетчик словаря нижнего регистра
		}
		else {
			continue;
		}

	}
	for (int i = 0; i <= BigLet.size() - 1; i++) { //перебор по строке гласных верхнего регистра
		A = BigLet[i];  // по i-му порядку берутся символы верхнего
		B = SmallLet[i]; //и нижнего регистра
		mp1[A] += mp2[B]; //значения словаря нижнего регистра прибавляются к словарю верхнего регистра
	}
	/*for (int i = 0; i <= BigLet.size() - 1; i++) {
		let = BigLet[i];
		cout << mp1[let] << " "; } */

		//проверка правильности итогового словаря
	for (int i = 0; i <= BigLet.size() - 1; i++) { //проходясь по итоговому (первому) сложенному словарю находим гласную с наименьшим подсчитанным кол-вом
		if ((min > mp1[BigLet[i]]) && (mp1[BigLet[i]] != 0)) {
			min = mp1[BigLet[i]];
			LET = BigLet[i];
			Llet = SmallLet[i];
		}
		else if (min == mp1[BigLet[i]]) {
			LET = LET + BigLet[i];
			Llet =  Llet + SmallLet[i];
		}
	}
	cout << "наименее часто встречающаяся гласная(ые): " << LET << "(" << Llet << ")";
}

void textFile2() {

	string text, str;
	int count = 0, n;


	ofstream fout("Lorem Ipsum.txt"); //создан файл;
	fout << "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.";
	fout.close();

	ifstream fin("Lorem Ipsum.txt"); //считывание файла

	char ch;

	while (true)
	{
		fin.get(ch); //посимвольный перебор
		if (fin.eof()) break; // пока содержимое файла не закончится
		text.append(1, ch); // к строке поочередно добавляются считываемые символы файла
	}

	cout << "Введите подстроку, которую необходимо найти\n";
	cin >> str;

	for (int i = 0; i <= text.size() - 1; i++) {
		count = 0;
		if (text[i] == str[0]) {
			n = i;
			for (int j = 1; j <= str.size() - 1; j++) {
				if (text[i + j] == str[j]) {
					count += 1;
				}
				else {
					break;
				}
			}
			if (count == str.size() - 1) {
				cout << "Есть вхождение с " << n << "-го символа\n";
				exit(0);
			}
		}
	}
	cout << "Нет вхождений";
}


void ranks() {

	int n, element, count = 0, e, curr = 0, summ = 0, num, CURR;
	string str, five = " ";
	string strCURR;


	cout << "Введите число n - количество элементов массива\n";
	cin >> n;

	int* arr = new int[n];
	for (int i = 0; i < n; i++) {
		cout << "Введите  " << i << "-й" << " элемент массива\n";
		while (true) {
			cin >> element;
			str = to_string(element);
			count = 0;
			for (int j = 0; j <= str.size() - 1; j++) {
				if ((str[j] == '0') || (str[j] == '1')) {
					count += 1;
				}
				else {
					cout << "Введено число не в двоичной системе. Введите заново.\n";
					break;
				}
			}
			if (count == str.size()) {
				break;
			}
		}
		arr[i] = element;
	}

	string* arr2 = new string[n];
	for (int i = 0; i < n; i++) {
		summ = 0;
		curr = 0;
		five = " ";
		num = arr[i];
		while (num > 0) {
			e = num % 10;
			if (e == 1) {
				summ += e * pow(2, curr); //получили перевод в десятичную систему
			}
			curr += 1;
			num = num / 10;
		}
		while (summ > 0) {
			CURR = summ % 5;
			strCURR = to_string(CURR);
			five = strCURR + five;
			summ /= 5;
		}
		arr2[i] = five; //добавлен элемент в пятеричной системе
	}
	for (int i = 0; i < n; i++) {
		cout << arr2[i] << " ";
	}
} 

void arrray() {
	int n, m; // ряды, столбцы
	float element, summ;
	cout << "Введите количество рядов и столбцов двумерного массива\n";
	cin >> n >> m;
	
	vector <vector<float>> vect(n, vector<float> (m, 0));
	for (int i = 0; i <= m - 1; i++) {
		cout << "Введите " << i << "-ю строку: ";
		for (int j = 0; j <= n - 1; j++) {
			cin >> element;
			vect[i][j] = element;
		}
	}
	for (int i = 0; i <= m - 1; i++) {
		summ = 0;
		for (int j = 0; j <= n - 1; j++) {
			summ += vect[i][j];
		}
		cout << "Сумма " << i << "-го рядa: " << summ << endl;
	}
}

void a() {
	string e = "2112";
	char k = e[0];
	int a = (int)k - 48;
	cout << a + 6;
}

void numbers() {

	int m, n, summ = 1; //m - левая гранмца,  n - правая

	cout << "Введите границы интервала m и n\n";
	cin >> m >> n;
	if (m > n) {
		swap(m, n);
	}
	if (m == 1) {
		m = 2;
	}

	for (int j = m; j <= n; j++) { //j - перебирамеые числа в промежутке
		summ = 1;
		for (int i = 2; i <= sqrt(j); i++) {
			if (j % i == 0) {
				if (j / i == i) {
					summ += i;
				}
				else {
					summ = summ + i + j / i;
				}
			}
		}
		if (summ == j) {
			cout << j << " ";
		}
		
	}
}

int main() {
	setlocale(0, "");
	//textFile1();
	//textFile2();
	//ranks();
	//a();
	//arrray();
	//numbers();

}
