#include <iostream>;
#include <map>;
#include <fstream>
#include <string>
using namespace std;

void textFile1() {
	setlocale(0, "");
	char let, A, B, LET, Llet;
	string text;
	string BigLet = "AEIOUY";
	string SmallLet = "aeiouy";
	bool Big = false, Small = false;
	int min = 10000;


	ofstream fout("Lorem Ipsum.txt"); //создан файл;
	fout << "тут должен быть Lorem Ipsum";
	fout.close();

	ifstream fin("Lorem Ipsum.txt"); //считывание файла

	char ch;

	while (true)
	{
		fin.get(ch); //посимвольный перебор
		if (fin.eof()) break; // пока содержимое файла не закончится
		text.append(1, ch); // к строке поочередно добавляются считываемые символы файла
	}

	map <char, int> mp1 = { {'A', 0}, {'E', 0}, {'I', 0}, {'O', 0}, {'U', 0}, {'Y', 0} };
	map <char, int> mp2 = { {'a', 0}, {'e', 0}, {'i', 0}, {'o', 0}, {'u', 0}, {'y', 0} };

	for (int i = 0; i <= text.size(); i++) { //задаются символы подаваемой строки и флаги
		let = text[i];
		Big = false;
		Small = false;
		for (int j = 0; j <= BigLet.size() - 1; j++) {  //перебор по строке крупной и малой
			if (let == BigLet[j]) { //если символ относится к гласным верхнего регистра
				Big = true; //флаг 
			}
			if (let == SmallLet[j]) { //если символ относится к гласным нижнего регистра
				Small = true; //флаг
			}
		}
		if (Big == true) {
			mp1[let] += 1; //счетчик словаря верхнего регистра
		}
		else if (Small = true) {
			mp2[let] += 1; //счетчик словаря нижнего регистра
		}
		else {
			continue;
		}

	}
	for (int i = 0; i <= BigLet.size() - 1; i++) { //перебор по строке гласных верхнего регистра
		A = BigLet[i];  // по i-му порядку берутся символы верхнего
		B = SmallLet[i]; //и нижнего регистра
		mp1[A] += mp2[B]; //значения словаря нижнего регистра прибавляются к словарю верхнего регистра
	}
	/*for (int i = 0; i <= BigLet.size() - 1; i++) {
		let = BigLet[i];
		cout << mp1[let] << " "; } */

		//проверка правильности итогового словаря
	for (int i = 0; i <= BigLet.size() - 1; i++) { //проходясь по итоговому (первому) сложенному словарю находим гласную с наименьшим подсчитанным кол-вом
		if (min > mp1[BigLet[i]]) {
			min = mp1[BigLet[i]];
			LET = BigLet[i];
			Llet = SmallLet[i];
		}
	}
	cout << "наименее часто встречающаяся гласная: " << LET << "(" << Llet << ")";
}

void textFile2() {

	string text, str;
	int count = 0, n;


	ofstream fout("Lorem Ipsum.txt"); //создан файл;
	fout << "тут должен быть Lorem Ipsum";
	fout.close();

	ifstream fin("Lorem Ipsum.txt"); //считывание файла

	char ch;

	while (true)
	{
		fin.get(ch); //посимвольный перебор
		if (fin.eof()) break; // пока содержимое файла не закончится
		text.append(1, ch); // к строке поочередно добавляются считываемые символы файла
	}

	cout << "Введите подстроку, которую необходимо найти\n";
	cin >> str;

	for (int i = 0; i <= text.size() - 1; i++) {
		count = 0;
		if (text[i] == str[0]) {
			n = i;
			for (int j = 1; j <= str.size() - 1; j++) {
				if (text[i + j] == str[j]) {
					count += 1;
				}
				else {
					break;
				}
			}
			if (count == str.size() - 1) {
				cout << "Есть вхождение с " << n << "-го символа\n";
				exit(0);
			}
		}
	}
	cout << "Нет вхождений";
}


void ranks() {

	int n, element, count = 0, e, curr = 0, summ = 0, num, CURR;
	string str, five = " ";
	string strCURR;


	cout << "Введите число n - количество элементов массива\n";
	cin >> n;

	int* arr = new int[n];
	for (int i = 0; i < n; i++) {
		cout << "Введите  " << i << "-й" << " элемент массива\n";
		while (true) {
			cin >> element;
			str = to_string(element);
			count = 0;
			for (int j = 0; j <= str.size() - 1; j++) {
				if ((str[j] == '0') || (str[j] == '1')) {
					count += 1;
				}
				else {
					cout << "Введено число не в двоичной системе. Введите заново.\n";
					break;
				}
			}
			if (count == str.size()) {
				break;
			}
		}
		arr[i] = element;
	}

	string* arr2 = new string[n];
	for (int i = 0; i < n; i++) {
		summ = 0;
		curr = 0;
		five = " ";
		num = arr[i];
		while (num > 0) {
			e = num % 10;
			if (e == 1) {
				summ += e * pow(2, curr); //получили перевод в десятичную систему
			}
			curr += 1;
			num = num / 10;
		}
		while (summ > 0) {
			CURR = summ % 5;
			strCURR = to_string(CURR);
			five = strCURR + five;
			summ /= 5;
		}
		arr2[i] = five; //добавлен элемент в пятеричной системе
	}
	for (int i = 0; i < n; i++) {
		cout << arr2[i] << " ";
	}
} 

void array() {

}

void a() {
	string e = "2112";
	char k = e[0];
	int a = (int)k - 48;
	cout << a + 6;
}
int main() {
	setlocale(0, "");
	//textFile2();
	ranks();
	//a();
}
